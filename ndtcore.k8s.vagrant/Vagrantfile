require "yaml"

# Cấu hình trực tiếp trong Vagrantfile
CLUSTER_NAME = "NDTCore Cluster"
CONTROL_IP_PREFIX = "10.0.0."
CONTROL_IP_SUFFIX = 10
CONTROL_IP = "#{CONTROL_IP_PREFIX}#{CONTROL_IP_SUFFIX}"
DNS_SERVERS = ["8.8.8.8", "1.1.1.1"]
POD_CIDR = "192.168.0.0/16"
SERVICE_CIDR = "10.96.0.0/12"
NUM_WORKER_NODES = 1

# Cấu hình phần cứng
MASTER_CONFIG = { "cpu" => 2, "memory" => 4096 }
WORKER_CONFIG = { "cpu" => 1, "memory" => 2048 }

# Phiên bản phần mềm
BOX = "bento/ubuntu-24.04"
KUBERNETES_VERSION = "1.31.0-*"
CALICO_VERSION = "3.26.0"
DASHBOARD_VERSION = "2.7.0"

Vagrant.configure("2") do |config|
    config.vm.box = BOX + (`uname -m`.strip == "aarch64" ? "-arm64" : "")
    config.vm.box_check_update = true

    # Thiết lập file /etc/hosts trên tất cả VM
    config.vm.provision "shell", env: {
        "CONTROL_IP" => CONTROL_IP,
        "NUM_WORKER_NODES" => NUM_WORKER_NODES,
        "DNS_SERVERS" => DNS_SERVERS.join(" ")
    }, inline: <<-SHELL
        apt-get update -y
        echo "$CONTROL_IP nodemaster" >> /etc/hosts
        for i in $(seq 1 ${NUM_WORKER_NODES}); do
            echo "#{CONTROL_IP_PREFIX}$((CONTROL_IP_SUFFIX + i)) node0${i}" >> /etc/hosts
        done
    SHELL

    def configure_vm(vm, name, config, ip, shared_folders)
        vm.vm.hostname = name
        vm.vm.network "private_network", ip: ip
        vm.vm.provider "virtualbox" do |vb|
            vb.cpus = config["cpu"]
            vb.memory = config["memory"]
            vb.customize ["modifyvm", :id, "--groups", "/#{CLUSTER_NAME}"] if CLUSTER_NAME.strip != ""
        end
    
        if shared_folders.is_a?(Array)
            shared_folders.each do |shared_folder|
                vm.vm.synced_folder shared_folder["host_path"], shared_folder["vm_path"]
            end
        end
    end

    # Tạo Control Plane (Master Node)
    config.vm.define "nodemaster" do |nodemaster|
        configure_vm(nodemaster, "nodemaster", MASTER_CONFIG, CONTROL_IP, defined?(SHARED_FOLDERS) ? SHARED_FOLDERS : [])
        nodemaster.vm.provision "shell", path: "scripts/common.sh"
        nodemaster.vm.provision "shell", env: {
            "CALICO_VERSION" => CALICO_VERSION,
            "CONTROL_IP" => CONTROL_IP,
            "POD_CIDR" => POD_CIDR,
            "SERVICE_CIDR" => SERVICE_CIDR,
            "KUBERNETES_VERSION" => KUBERNETES_VERSION,
            "DNS_SERVERS" => DNS_SERVERS.join(" ")
        }, path: "scripts/master.sh"
    end

    # Tạo Worker Nodes
    (1..NUM_WORKER_NODES).each do |i|
        config.vm.define "node0#{i}" do |node|
            configure_vm(node, "node0#{i}", WORKER_CONFIG, "#{CONTROL_IP_PREFIX}#{CONTROL_IP_SUFFIX + i}", defined?(SHARED_FOLDERS) ? SHARED_FOLDERS : [])
            node.vm.provision "shell", path: "scripts/common.sh"
            node.vm.provision "shell", env: {
                "KUBERNETES_VERSION" => KUBERNETES_VERSION,
                "CONTROL_IP" => CONTROL_IP,
                "DNS_SERVERS" => DNS_SERVERS.join(" ")
            }, path: "scripts/node.sh"
            if i == NUM_WORKER_NODES && !DASHBOARD_VERSION.strip.empty?
                node.vm.provision "shell", env: {
                    "DASHBOARD_VERSION" => DASHBOARD_VERSION
                }, path: "scripts/dashboard.sh"
            end
        end
    end
end
